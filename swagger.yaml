openapi: 3.0.0
info:
  title: Assignment API Docs
  description: Assignemnt API Docs
  version: 1.0.0
servers:
  - url: 'http://localhost:4000/api/'
    description: Localhost development server
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: auth-token
  schemas:
    Cat:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        age:
          type: number
        gender:
          type: string
        breed:
          type: string
        color:
          type: string
    User:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
paths:
  /user/register:
    post:
      tags:
        - User
      summary: Register a new User
      description: Register a new User in the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User created succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  _id:
                    type: string
  /user/login:
    post:
      tags:
        - User
      summary: Login a User
      description: Login a User in order to get JWT token (auth-token)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  data:
                    type: string
  /user:
    get:
      tags:
        - User
      summary: Retrieves a list of Users
      description: Retrieves a list of Users as JSON objects.
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: A list of Users JSON objects in an array.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  '/user/{id}':
    get:
      tags:
        - User
      summary: Specific User
      description: Retrieves a specific User based on it id.
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: MongoDB id
          schema:
            type: string
      responses:
        '200':
          description: A User in the format of a JSON object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    put:
      tags:
        - User
      summary: Updates a specific User
      description: Updates a specific User based on it id
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: MongoDB id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
        - User
      summary: Deletes a specific User
      description: Deletes a specific User based on it id
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: MongoDB id
          schema:
            type: string
      responses:
        '200':
          description: User deleted succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /cat:
    get:
      tags:
        - Cat
      summary: Retrieves a list of Cats
      description: Retrieves a list of Cats as JSON objects.
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: A list of Cat JSON objects in an array.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cat'
    post:
      tags:
        - Cat
      summary: Create a new Cat
      description: Create a new Cat
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cat'
      responses:
        '200':
          description: Cat created succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
  '/cat/{id}':
    get:
      tags:
        - Cat
      summary: Specific Cat
      description: Retrieves a specific Cat based on it id.
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: MongoDB id
          schema:
            type: string
      responses:
        '200':
          description: A Cat in the format of a JSON object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cat'
    put:
      tags:
        - Cat
      summary: Updates a specific Cat
      description: Updates a specific Cat based on it id
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: MongoDB id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cat'
      responses:
        '200':
          description: Cat updated succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
    delete:
      tags:
        - Cat
      summary: Deletes a specific Cat
      description: Deletes a specific Cat based on it id
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: MongoDB id
          schema:
            type: string
      responses:
        '200':
          description: Cat deleted succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'